WITH CUSTOMER_ORDERS 
AS (
    SELECT
        CUSTOMER_ID,
        DATE_TRUNC('month', ORDER_DATE) AS ACTIVE_MONTH
    FROM 
        {{ ref('stg_sales_orders') }}
    GROUP BY 
        CUSTOMER_ID, 
        DATE_TRUNC('month', ORDER_DATE)
),
FIRST_LAST_ORDER_DATES 
AS (
    SELECT
        CUSTOMER_ID,
        MIN(DATE_TRUNC('month', ORDER_DATE)) AS FIRST_ORDER_MONTH,
        MAX(DATE_TRUNC('month', ORDER_DATE)) AS LAST_ORDER_MONTH
    FROM 
        {{ ref('stg_sales_orders') }}
    GROUP BY 
        CUSTOMER_ID
),

POSSIBLE_WINDOWS 
AS (
    SELECT 
        FLOD.CUSTOMER_ID,
        DATE_TRUNC('month', CO1.ACTIVE_MONTH) AS WINDOW_START
    FROM 
        FIRST_LAST_ORDER_DATES FLOD
    JOIN 
        CUSTOMER_ORDERS CO1 
    ON 
        FLOD.CUSTOMER_ID = CO1.CUSTOMER_ID
    WHERE 
        CO1.ACTIVE_MONTH <= FLOD.LAST_ORDER_MONTH - INTERVAL '2 month'
),
WINDOW_ACTIVITY 
AS(
    SELECT 
        PW.CUSTOMER_ID,
        PW.WINDOW_START,
        COUNT(DISTINCT CO.ACTIVE_MONTH) AS ACTIVE_MONTHS_IN_WINDOW
    FROM 
        POSSIBLE_WINDOWS PW
    LEFT JOIN 
        CUSTOMER_ORDERS CO
    ON 
        CO.CUSTOMER_ID = PW.CUSTOMER_ID
    AND 
        CO.ACTIVE_MONTH BETWEEN PW.WINDOW_START AND PW.WINDOW_START + INTERVAL '2 month'
    GROUP BY 
        PW.CUSTOMER_ID, PW.WINDOW_START
),
RECURRING_STATUS 
AS(
    SELECT 
        CUSTOMER_ID,
        MAX(CASE WHEN ACTIVE_MONTHS_IN_WINDOW = 3 THEN 1 ELSE 0 END) AS IS_RECURRING
    FROM 
        WINDOW_ACTIVITY
    GROUP BY 
        CUSTOMER_ID
)
SELECT 
    C.CUSTOMER_ID,
    C.CUSTOMER_SHORT_NAME,
    CASE 
        WHEN COALESCE(RS.IS_RECURRING, 0) = 1 
            THEN 'RECURRING'
        ELSE 'NON_RECURRING'
    END AS CUSTOMER_REV_TYPE
FROM 
    {{ ref('stg_customers_data') }} C
LEFT JOIN 
    RECURRING_STATUS RS 
ON 
    C.CUSTOMER_ID = RS.CUSTOMER_ID
ORDER BY 
    CUSTOMER_REV_TYPE DESC